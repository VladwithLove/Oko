// Generated by view binder compiler. Do not edit!
package com.example.oko.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.oko.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBacketBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView backetName;

  @NonNull
  public final LinearLayout btnLin;

  @NonNull
  public final TextView countBacket;

  @NonNull
  public final ImageView itemImage;

  @NonNull
  public final Button minsItem;

  @NonNull
  public final Button plusItem;

  @NonNull
  public final TextView priceBacket;

  private ItemBacketBinding(@NonNull CardView rootView, @NonNull TextView backetName,
      @NonNull LinearLayout btnLin, @NonNull TextView countBacket, @NonNull ImageView itemImage,
      @NonNull Button minsItem, @NonNull Button plusItem, @NonNull TextView priceBacket) {
    this.rootView = rootView;
    this.backetName = backetName;
    this.btnLin = btnLin;
    this.countBacket = countBacket;
    this.itemImage = itemImage;
    this.minsItem = minsItem;
    this.plusItem = plusItem;
    this.priceBacket = priceBacket;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBacketBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBacketBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_backet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBacketBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backetName;
      TextView backetName = ViewBindings.findChildViewById(rootView, id);
      if (backetName == null) {
        break missingId;
      }

      id = R.id.btnLin;
      LinearLayout btnLin = ViewBindings.findChildViewById(rootView, id);
      if (btnLin == null) {
        break missingId;
      }

      id = R.id.countBacket;
      TextView countBacket = ViewBindings.findChildViewById(rootView, id);
      if (countBacket == null) {
        break missingId;
      }

      id = R.id.itemImage;
      ImageView itemImage = ViewBindings.findChildViewById(rootView, id);
      if (itemImage == null) {
        break missingId;
      }

      id = R.id.minsItem;
      Button minsItem = ViewBindings.findChildViewById(rootView, id);
      if (minsItem == null) {
        break missingId;
      }

      id = R.id.plusItem;
      Button plusItem = ViewBindings.findChildViewById(rootView, id);
      if (plusItem == null) {
        break missingId;
      }

      id = R.id.priceBacket;
      TextView priceBacket = ViewBindings.findChildViewById(rootView, id);
      if (priceBacket == null) {
        break missingId;
      }

      return new ItemBacketBinding((CardView) rootView, backetName, btnLin, countBacket, itemImage,
          minsItem, plusItem, priceBacket);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
