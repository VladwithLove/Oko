// Generated by view binder compiler. Do not edit!
package com.example.oko.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.oko.R;
import com.makeramen.roundedimageview.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAccountBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button aboutAccount;

  @NonNull
  public final TextView accountData;

  @NonNull
  public final TextView accountEmail;

  @NonNull
  public final Button ordersAccount;

  @NonNull
  public final Button shopHistory;

  @NonNull
  public final Button signIn;

  @NonNull
  public final Button systemsAccount;

  @NonNull
  public final RoundedImageView userImages;

  private FragmentAccountBinding(@NonNull FrameLayout rootView, @NonNull Button aboutAccount,
      @NonNull TextView accountData, @NonNull TextView accountEmail, @NonNull Button ordersAccount,
      @NonNull Button shopHistory, @NonNull Button signIn, @NonNull Button systemsAccount,
      @NonNull RoundedImageView userImages) {
    this.rootView = rootView;
    this.aboutAccount = aboutAccount;
    this.accountData = accountData;
    this.accountEmail = accountEmail;
    this.ordersAccount = ordersAccount;
    this.shopHistory = shopHistory;
    this.signIn = signIn;
    this.systemsAccount = systemsAccount;
    this.userImages = userImages;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aboutAccount;
      Button aboutAccount = ViewBindings.findChildViewById(rootView, id);
      if (aboutAccount == null) {
        break missingId;
      }

      id = R.id.accountData;
      TextView accountData = ViewBindings.findChildViewById(rootView, id);
      if (accountData == null) {
        break missingId;
      }

      id = R.id.accountEmail;
      TextView accountEmail = ViewBindings.findChildViewById(rootView, id);
      if (accountEmail == null) {
        break missingId;
      }

      id = R.id.ordersAccount;
      Button ordersAccount = ViewBindings.findChildViewById(rootView, id);
      if (ordersAccount == null) {
        break missingId;
      }

      id = R.id.shopHistory;
      Button shopHistory = ViewBindings.findChildViewById(rootView, id);
      if (shopHistory == null) {
        break missingId;
      }

      id = R.id.signIn;
      Button signIn = ViewBindings.findChildViewById(rootView, id);
      if (signIn == null) {
        break missingId;
      }

      id = R.id.systemsAccount;
      Button systemsAccount = ViewBindings.findChildViewById(rootView, id);
      if (systemsAccount == null) {
        break missingId;
      }

      id = R.id.userImages;
      RoundedImageView userImages = ViewBindings.findChildViewById(rootView, id);
      if (userImages == null) {
        break missingId;
      }

      return new FragmentAccountBinding((FrameLayout) rootView, aboutAccount, accountData,
          accountEmail, ordersAccount, shopHistory, signIn, systemsAccount, userImages);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
