// Generated by view binder compiler. Do not edit!
package com.example.oko.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.oko.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAdminShopBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextInputEditText categoryE;

  @NonNull
  public final TextInputLayout categoryL;

  @NonNull
  public final TextInputEditText descriptionE;

  @NonNull
  public final TextInputLayout descriptionL;

  @NonNull
  public final Button edit;

  @NonNull
  public final ImageView itemImage;

  @NonNull
  public final TextInputEditText nameE;

  @NonNull
  public final TextInputLayout nameL;

  @NonNull
  public final TextInputEditText priceE;

  @NonNull
  public final TextInputLayout priceL;

  @NonNull
  public final Button save;

  @NonNull
  public final TextInputEditText typeE;

  @NonNull
  public final TextInputLayout typeL;

  private ItemAdminShopBinding(@NonNull CardView rootView, @NonNull TextInputEditText categoryE,
      @NonNull TextInputLayout categoryL, @NonNull TextInputEditText descriptionE,
      @NonNull TextInputLayout descriptionL, @NonNull Button edit, @NonNull ImageView itemImage,
      @NonNull TextInputEditText nameE, @NonNull TextInputLayout nameL,
      @NonNull TextInputEditText priceE, @NonNull TextInputLayout priceL, @NonNull Button save,
      @NonNull TextInputEditText typeE, @NonNull TextInputLayout typeL) {
    this.rootView = rootView;
    this.categoryE = categoryE;
    this.categoryL = categoryL;
    this.descriptionE = descriptionE;
    this.descriptionL = descriptionL;
    this.edit = edit;
    this.itemImage = itemImage;
    this.nameE = nameE;
    this.nameL = nameL;
    this.priceE = priceE;
    this.priceL = priceL;
    this.save = save;
    this.typeE = typeE;
    this.typeL = typeL;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAdminShopBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAdminShopBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_admin_shop, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAdminShopBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.categoryE;
      TextInputEditText categoryE = ViewBindings.findChildViewById(rootView, id);
      if (categoryE == null) {
        break missingId;
      }

      id = R.id.categoryL;
      TextInputLayout categoryL = ViewBindings.findChildViewById(rootView, id);
      if (categoryL == null) {
        break missingId;
      }

      id = R.id.descriptionE;
      TextInputEditText descriptionE = ViewBindings.findChildViewById(rootView, id);
      if (descriptionE == null) {
        break missingId;
      }

      id = R.id.descriptionL;
      TextInputLayout descriptionL = ViewBindings.findChildViewById(rootView, id);
      if (descriptionL == null) {
        break missingId;
      }

      id = R.id.edit;
      Button edit = ViewBindings.findChildViewById(rootView, id);
      if (edit == null) {
        break missingId;
      }

      id = R.id.itemImage;
      ImageView itemImage = ViewBindings.findChildViewById(rootView, id);
      if (itemImage == null) {
        break missingId;
      }

      id = R.id.nameE;
      TextInputEditText nameE = ViewBindings.findChildViewById(rootView, id);
      if (nameE == null) {
        break missingId;
      }

      id = R.id.nameL;
      TextInputLayout nameL = ViewBindings.findChildViewById(rootView, id);
      if (nameL == null) {
        break missingId;
      }

      id = R.id.priceE;
      TextInputEditText priceE = ViewBindings.findChildViewById(rootView, id);
      if (priceE == null) {
        break missingId;
      }

      id = R.id.priceL;
      TextInputLayout priceL = ViewBindings.findChildViewById(rootView, id);
      if (priceL == null) {
        break missingId;
      }

      id = R.id.save;
      Button save = ViewBindings.findChildViewById(rootView, id);
      if (save == null) {
        break missingId;
      }

      id = R.id.typeE;
      TextInputEditText typeE = ViewBindings.findChildViewById(rootView, id);
      if (typeE == null) {
        break missingId;
      }

      id = R.id.typeL;
      TextInputLayout typeL = ViewBindings.findChildViewById(rootView, id);
      if (typeL == null) {
        break missingId;
      }

      return new ItemAdminShopBinding((CardView) rootView, categoryE, categoryL, descriptionE,
          descriptionL, edit, itemImage, nameE, nameL, priceE, priceL, save, typeE, typeL);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
