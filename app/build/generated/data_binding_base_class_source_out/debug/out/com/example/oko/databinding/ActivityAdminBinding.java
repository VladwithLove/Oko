// Generated by view binder compiler. Do not edit!
package com.example.oko.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.oko.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button categoryBtn;

  @NonNull
  public final TextView helloText;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final Button ordersBtn;

  @NonNull
  public final Button shopBtn;

  @NonNull
  public final Button signOut;

  @NonNull
  public final Button usersBtn;

  private ActivityAdminBinding(@NonNull LinearLayout rootView, @NonNull Button categoryBtn,
      @NonNull TextView helloText, @NonNull ImageView imageView, @NonNull Button ordersBtn,
      @NonNull Button shopBtn, @NonNull Button signOut, @NonNull Button usersBtn) {
    this.rootView = rootView;
    this.categoryBtn = categoryBtn;
    this.helloText = helloText;
    this.imageView = imageView;
    this.ordersBtn = ordersBtn;
    this.shopBtn = shopBtn;
    this.signOut = signOut;
    this.usersBtn = usersBtn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.categoryBtn;
      Button categoryBtn = ViewBindings.findChildViewById(rootView, id);
      if (categoryBtn == null) {
        break missingId;
      }

      id = R.id.helloText;
      TextView helloText = ViewBindings.findChildViewById(rootView, id);
      if (helloText == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.ordersBtn;
      Button ordersBtn = ViewBindings.findChildViewById(rootView, id);
      if (ordersBtn == null) {
        break missingId;
      }

      id = R.id.shopBtn;
      Button shopBtn = ViewBindings.findChildViewById(rootView, id);
      if (shopBtn == null) {
        break missingId;
      }

      id = R.id.signOut;
      Button signOut = ViewBindings.findChildViewById(rootView, id);
      if (signOut == null) {
        break missingId;
      }

      id = R.id.usersBtn;
      Button usersBtn = ViewBindings.findChildViewById(rootView, id);
      if (usersBtn == null) {
        break missingId;
      }

      return new ActivityAdminBinding((LinearLayout) rootView, categoryBtn, helloText, imageView,
          ordersBtn, shopBtn, signOut, usersBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
